%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox:  0 0 119 87 %%Title: (spectra.cvx) %%Creator: Canvas (X.0.2) %%CreationDate: (06/) %%DocumentProcSets: Deneba_CanvasCustomColors%%+ CVDict%%DocumentFonts: %%DocumentNeededFonts: %%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginProlog %%BeginResource: procset CVDict%%Title: Deneba standard graphics%%Version: 1.02%%CreationDate: 10/14/99%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserveduserdict /CVDict 200 dict putCVDict begin/invalidcolortable? true def   /level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse deflevel2 not { /xshow {0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshowpop pop pop pop} def } if/initialize{CVDict{dup xcheck{bind}if pop pop}forallcurrentscreen /_sp exch def /_sa exch def /_sf exch def/DefaultScreen{_sf _sa /_sp load}def/DefaultScreenProc{ /_sp load}def/setstrokeadjust where{pop true}{false}ifelse{/sa /setstrokeadjust load def/li /lineto load def/mt /moveto load def/ct /curveto load def/lh { currentpoint exch pop lineto}bind def/lv { currentpoint pop exch lineto}bind def}{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind defuserdict /StrokeAdjustDict 100 dict putStrokeAdjustDict begin/_xl{transform.25 sub round .25 add exch.25 sub round .25 add exchitransform}bind def/li{ _xl lineto}bind def/mt{ _xl moveto}bind def/ct{ _xl curveto}bind def/lh { dup _xl pop currentpoint exch pop lineto}bind def/lv { dup _xl pop currentpoint pop exch lineto}bind def/rp{_xl/cv_b xdf/cv_r xdf_xl/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}bind defend}ifelse}def/terminate{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}ifcurrentdict CVDict eq{end}if}def/mxMax 64 def/mxStk [mxMax {matrix} repeat]def/mxIdx 0 def/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def/scl { 72 div exch 72 div exch scale } def/scli { 72 exch div exch 72 exch div exch scale } def/_cvmtx matrix def/_txtmtx matrix def/_initmtx matrix def/xdf{exch def}def/min{2 copy gt{exch}if pop}def/max{2 copy lt{exch}if pop}def/CVvec 256 array def/T true def/F false def/_id 0 def/_encodindex 0 def/_encodArr 3 array def/_fd 0 def/_textSave null def/_letterSpace 0 def/_spaceXtra 0 def/_PageSave null def/_penh 1.0 def/_penv 1.0 def/save0 null def/_w 0 def/_h 0 def/_ds 0 def/hct false def/pw 0 def/wdif 0 def/temp 0 def/currot 0 def/savehandler null def/ia 0 def/ix 0 def/ixn 1 def/MultipleDataSources false def /debug{dup /$eps exch not def{/savehandler errordict /handleerror get deferrordict/handleerror{$error beginnewerror{/newerror false defshowpage72 72 scale/Helvetica findfont .2 scalefont setfont.25 9.6 moveto(Error: )showerrorname{dup type/stringtype ne{(converted error name will end up in this string)cvs}ifshow}exec.25 9.4 moveto(Offending Command: )show/command load{dup type/stringtype ne{(converted command name will end up in this string)cvs}ifshow}exec.25 9.2 moveto(Stack: )showostack{.25 currentpoint .2 sub exch pop movetodup type/stringtype ne{dup type/integertype eq1 index type/realtype eq or1 index type/nametype eq ornot {type}if(converted stack will end up in this string)cvs}ifshow}forallshowpageCVDict /savehandler get exec}ifend}put}if}def/lc{setlinecap}def/lj{setlinejoin}def/lm{setmiterlimit}def/lf{setflat}def/cp{closepath}def/np{newpath}def/$psz 30 array def/$pix 0 def/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def/li{lineto} def/lh{currentpoint exch pop lineto}def/lv{currentpoint pop exch lineto}def/mt{moveto} def/_cv_mh{currentpoint exch pop moveto}def/_cv_mv{currentpoint pop exch moveto}def/ct{curveto} def/rt{4 -2 roll movetodup 0 exch rlinetoexch 0 rlinetoneg 0 exch rlinetoclosepath}def/_hr{{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}}def/_cs null def/fg{setgray}def/setcmykcolor where {pop true}{false}ifelse{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse/setcolorspace where {pop true}{false}ifelse{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse/$cc 5 array def/findcmykcustomcolor where {pop true}{false}ifelsenot {/findcmykcustomcolor{$cc astore}def}if/setcustomcolor where {pop true}{false}ifelsenot{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def/setseparationgray where {pop true}{false}ifelsenot{/setseparationgray {systemdict /setgray get exec} def}if/sg{ setseparationgray}def/sp{/_penv xdf/_penh xdf}def/rp{/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}def/rr{/yradius xdf/xradius xdf/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l xradius add cv_t movetocv_r xradius sub cv_t lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale1 0 1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_r cv_b yradius sub lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 1 -1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l xradius add cv_b lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale-1 0 -1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l cv_t yradius add lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 -1 1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixclosepath}def/ep{_cvmtx currentmatrix poptranslatescale1 0 moveto0 0 1 0 360 arcclosepath_cvmtx setmatrix}def/wd{_cvmtx currentmatrix poptranslatescale0 0 moveto0 0 1 5 -2 roll arcnclosepath_cvmtx setmatrix}def/as{_cvmtx currentmatrix poptranslatescale0 0 1 5 -2 roll arcn_cvmtx setmatrix}def/ds{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def/df{fill}def/de{eofill}def/_gstk 5 array def/_gstkc 0 def/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def/hs{newpath gsave stm}def/hc{/_hr load exch get exec newpath}def/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq not{aload pop moveto}{pop}ifelse dup /_cf get setfontdup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def/id{ /_id xdf}def/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.% All rights reserved.level2 { save /dontloadlevel1 xdf }if/startnoload{{/noload save def} if}def/endnoload{{noload restore}if }def/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def/ncolors 1 def/colorimage where{pop true}{false}ifelse{/ncolors 0statusdict begin /processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known{pop {deviceinfo /Colors get}}if}if}ifelse end defncolors 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict/currentcolortransfer testsystemdict/currentcmykcolor testsystemdictand and and not{/ncolors 0 def}if}if}ifncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}ifncolors 1 eq dup dup not startnoload{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] cvx bind settransfer _w _h 8 _imatrix _ds image}def}ifnot endnoloadncolors dup 3 eq exch 4 eq ordup dup not startnoload{/nullproc{{}}def/concatutil{/exec load7 -1 roll /exec load}def/defsubclut{1 add getinterval def}def/spconcattransfer   {/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ldcurrentcolortransfer[{Aclut ncompute}concatutil] cvx[{Bclut ncompute}concatutil] cvx[{Cclut ncompute}concatutil] cvx[{Dclut ncompute}concatutil] cvxsetcolortransfer}def/setuprgbcluts{/bit3x rgbclut length 3 sub def/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  endnoload ncolors 3 eq dup dup not startnoload{/3compute{exch bit3x mulround cvi get 255 div}def/doclutimage{%/rgbclut xdf pop setuprgbcluts/3compute rclut gclut bclut dupspconcattransfer _w _h 8 _imatrix[/_ds load /exec load /dup load dup]cvxnullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload{/stuffclut{cmykindex 3 -1 roll put}def/ftoint{1 exch sub 255 mul round cvi}def/4compute { exch bit4x mul round cvi get 255 div } def/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def/cmykclut bit4x 4 add string def/cclut cmykclut def/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x defsubclut/cmykindex 0 def0 1 bit1x{dup /cmykindex exch bit1x exch sub 4 mul def3 mul dup rclut exch get 255 div exch dup gclut exch get 255 divexch bclut exch get 255 divsetrgbcolor currentcmykcolorftoint kclut stuffclutftoint yclut stuffclutftoint mclut stuffclutftoint cclut stuffclut}for}def/doclutimage{invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx nullproc nullproc nullproc true 4 colorimage}def}ifnot endnoloadncolors 0 eqdup dup not startnoload{/colorexpand{mystringexp 0 rgbclut3 copy7 -1 roll{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forallpop pop pop pop pop}def/createexpandstr{/mystringexp exch st0 length mul string def}def/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix[/_ds load /exec load /colorexpand load /exec load] cvxfalse 3 colorimage}def}if not endnoloadlevel2 { dontloadlevel1 restore }iflevel2 not{ save /dontloadlevel2 xdf }if/rgbclut 0 def/doclutimage{/hival 255 def [/Indexed /DeviceRGB hival rgbclut] setcolorspace_imagedict dup begin /Width _w def /Height _h def  /Decode [0 hival] def  /ImageMatrix _imatrix def/BitsPerComponent 8 def /Interpolate true defend image}deflevel2 not{ dontloadlevel2 restore }if%%EndProcSet/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate true def currentdict end def/hascolor true def/level2 systemdict /languagelevel known{languagelevel 2 ge}{false}ifelse def/foureq {4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 rollpop pop pop pop and and and} def/setupbands{gsave/_settransfer systemdict /settransfer get def/_currenttransfer systemdict /currenttransfer get def/_image systemdict /image get def/blank 0 _currenttransfer exec1 _currenttransfer exec eq def/negative blank{0 _currenttransfer exec 0.5 lt}{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def/inverted? negative def/_currentgray systemdict /currentgray get defhascolor{/$b 0 def} {/$b 5 def} ifelse/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub0 1 0 0 setcmykcolor _currentgray 1 exch sub0 0 1 0 setcmykcolor _currentgray 1 exch sub0 0 0 1 setcmykcolor _currentgray 1 exch sub4 {4 copy} repeat1 0 0 0 foureq{/$b 1 store}if0 1 0 0 foureq{/$b 2 store}if0 0 1 0 foureq{/$b 3 store}if0 0 0 1 foureq{/$b 4 store}if0 0 0 0 foureq{/$b 6 store}if}ifblank{/$b 6 store}if$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def/doimage{level2{image}{beginWidth Height BitsPerComponent ImageMatrixDecode length 2 eq{/DataSource load end image}{Decode length 6 eq{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelseMultipleDataSources 3 end DSIColorImage}{Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 getDataSource 2 get DataSource 3 get}{/DataSource load}ifelseMultipleDataSources 4 end DSIColorImage}if}ifelse}ifelse}ifelse}def/dt{/rgbclut xdf /bwclut xdf}def/cl{$i setmatrix translate scale/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get defdoclutimage} def/cd{$i setmatrix translate scalelevel2{_imagedict /ColorSpace get setcolorspace}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin/ImageMatrix _imatrix defcurrentdict enddoimage} def/im{$i setmatrix translate scale level2{/DeviceGray setcolorspace 0 setgray}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin%/Decode [0 1] def  %/Width _w def%/Height _h def/ImageMatrix _imatrix defcurrentdict end doimage }def/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul addcvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dupst0 exch get .3 mul1 index 1 add st0 exch get .59 mul add1 index 2 add st0 exch get .11 mul add1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if255.0 exch sub cviexch 4 div cvi exchst1 3 1 roll put}for st1}}ifelseimage}def}ifelse/OPIimage{image}def/$i matrix def/bi{scale translate $i currentmatrix pop translate scale setupbands}def/ei{$i setmatrix}def/ik{$i setmatrix translate scale /_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_w _h false _imatrix 5 -1 roll _ds imagemask}def/rs{2 copy translate3 -1 roll neg rotateneg exch neg exch translate}def/cs{_cvmtx astore concat} def/fd{/_fd xdf}def/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def/rf{/_encodindex xdfFontDirectory exch known {findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}foralldup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}{exch pop}ifelse}forall pop}if}ifcurrentdict enddefinefont pop }{pop pop}ifelse} def/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/wrk1 ( ) def/wdict 16 dict def/Work75 75 string def/Nmk{Work75 cvs dup}def/Npt{put cvn}def/dhOdh{Nmk 2 79 Npt}def/dhBdh{Nmk 2 111 Npt}def/dhSdh{Nmk 2 83 Npt}def/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def/fts{/ftSize exch def}def/mkFT{dup/FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forallcurrentdict enddup/FDepVector 2 copy get[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict deftempFT begin/FontMatrix [1 0 0 1 0 0] def/FontType 3 defdup/Encoding get/Encoding exch def/proc2 2 index defdup/ft1 exch def/ft2 1 array def/FontBBox [0 0 1 1] def/BuildChar{CVDict beginexch dup/ftdt xdf beginwdict begin/chr xdf/chrst wrk1 dup 0 chr put defft2 0 get null eq{ft1 dup length 2 add dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop defcurrentdict end/q exch definefontft2 exch 0 exch put}ifftdt/proc2 get exec end end end}def end tempFT}ifelse3 index exchdefinefont exch pop}def/mb{dup dhBdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{boldproc} exchmkFT pop pop pop exch pop}ifelse }def/mo{dup dhOdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{outproc} exchmkFT pop pop pop exch pop}ifelse }def/ms{dup dhSdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{ShadChar} exchmkFT  pop pop pop exch pop}ifelse }def/outproc{ft1 setfontgsave chrst sfWidth grestoresetcharwidth dblsh}def/boldproc{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthft1 /PaintType get 2 ne{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def/dblsh{currentcolor currentcolorspace 1.0 setgraychrst 0 0 moveto show setcolorspace setcolorft2 0 get setfont chrst 0 0 moveto show}def/ShadChar{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthchrst .06 0 moveto show0 .05 translate dblsh}def/ts{show}def/ta{/_letterSpace xdf/_spaceXtra xdf}def/tf{/_textWidth xdf/_numSpaces xdf/_stringLength xdfdup	stringwidth pop_letterSpace _stringLength 1 sub mul add_spaceXtra _numSpaces mul add_textWidth exch sub /wdif xdf_spaceXtra 0 32wdif _stringLength div_letterSpace add0 6 -1 roll awidthshow}def/pb{/_PageSave save def/showpage{}def}def/pe{_PageSave restore}def/pm{_pm currentmatrix pop}def/_pm matrix def/ps{showpage _pm setmatrix}deflevel2{/ef {gsave 6 array astore concat dup execform grestore}def}{/ef{gsave 6 array astore concat newpath dup begin Matrix concatBBox dup dup 0 get exch 1 get movetodup dup 0 get exch 3 get linetodup dup 2 get exch 3 get linetodup 2 get exch 1 get lineto closepathclip newpath PaintProc end grestore}def}ifelse/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def/ec{pop restore}def/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def/setoverprint where {pop}{/setoverprint{pop}def}ifelse/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def/DSIEndPaintProc{currentdict end}def/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 	/FormType 1 def /PaintProc { /pp get exec } def /pp} def/DSIEndPaintSubProc {bind def end pD} def/iaa {/ix ix ixn add def} def/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def/ias {/st0 ia ix get def iaa st0} def/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} definitializeend%%EndResourceCVDict begin 0 id 1 fd_encodArr 0[39/quotesingle 96/grave128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis] put_encodArr 1[39/quotesingle 96/grave128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron] putend%%EndProlog %%BeginSetup CVDict begin/ttn {dup level2 {/Font resourcestatus {pop pop exch}if}{FontDirectory exch known {exch}if}ifelse pop dup dup} def/___FN3 /Helvetica dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf/___FN2003 /Helvetica-Oblique dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf/___FN4 /Symbol dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {2}{-1} ifelse end} {pop -1} ifelse rf0 id1 fd0 87 translate300 -300 scli%%EndSetup %%BeginPageSetup pm%%EndPageSetup/DeviceCMYK scs0 0 0 1. f40.1250 0.1250 sp 0 lc 2 ljT sa%page rect: 2002 314 2120 399 hs0 0 494 357 rp 0 hcstm0 0 0 1. f4np244.2235 328.125 mt242.1401 328.125 li242.1401 33.724 li244.2235 33.724 li244.2235 328.125 licpdfgs0 0 0 1. f4np242.9539 0 mt228.5985 40.1042 li257.7651 40.1042 li242.9539 0 licpdegrrtmstm0 0 0 1. f4np39.5833 202.0833 mt39.5833 200. li439.1927 200. li439.1927 202.0833 li39.5833 202.0833 licpdfgs0 0 0 1. f4np472.9167 200.8138 mt432.8125 186.4583 li432.8125 215.625 li472.9167 200.8138 licpdegrrtmstm0 0 0 1. f42.0833 2.0833 sp14.3 lm 0 lj0 0 0 1. f4stm41.6667 fts/___FN3 cvsf0 0 0 1. f4F sa481.25 214.3745 mt(t)  showT sartmrtmstm0 0 0 1. f42.0833 2.0833 sp0 0 0 1. f4stm0 0 0 1. f4np51.9816 226.3542 mt75.3174 226.3542 li75.3174 229.3449 li51.9816 229.3449 li51.9816 226.3542 licpdertmstm0 0 0 1. f4np86.0799 240.1685 mt82.6079 240.1685 80.1479 239.2372 78.5828 237.3303 ct77.0176 235.4235 76.2533 233.157 76.2533 230.4232 ct80.0781 230.4232 li80.2422 232.3232 80.5893 233.6717 81.1361 234.5329 ct82.0929 236.0775 83.7819 236.8319 86.2834 236.8319 ct88.2244 236.8319 89.7465 236.3245 90.922 235.2856 ct92.0976 234.2468 92.6717 232.9383 92.6717 231.298 ct92.6717 229.275 92.0676 227.8931 90.8305 227.0866 ct89.5934 226.2801 87.9145 225.8862 85.7137 225.8862 ct85.4677 225.8862 85.224 225.8896 84.9711 225.8964 ct84.7182 225.9032 84.4679 225.9133 84.2082 225.9269 ct84.2082 222.6921 li84.5909 222.7331 84.9047 222.7598 85.1644 222.7734 ct85.4241 222.7871 85.6978 222.7938 85.9985 222.7938 ct87.3791 222.7938 88.4873 222.5802 89.3758 222.1427 ct90.9341 221.3773 91.6951 220.0421 91.6951 218.0737 ct91.6951 216.6111 91.1878 215.5096 90.1489 214.7168 ct89.1101 213.924 87.9285 213.5368 86.5479 213.5368 ct84.0874 213.5368 82.4251 214.3379 81.4819 215.9782 ct80.9625 216.8804 80.6754 218.1354 80.6071 219.8031 ct76.9857 219.8031 li76.9857 217.616 77.4129 215.8002 78.2878 214.2692 ct79.7914 211.5353 82.3749 210.2002 86.1613 210.2002 ct89.1549 210.2002 91.4179 210.8511 93.0583 212.1838 ct94.6986 213.5166 95.4997 215.4025 95.4997 217.9313 ct95.4997 219.7357 95.0257 221.1643 94.0552 222.2852 ct93.4537 222.9823 92.6927 223.5163 91.7358 223.9128 ct93.2805 224.3365 94.4587 225.1343 95.3267 226.344 ct96.1947 227.5537 96.6187 228.999 96.6187 230.7487 ct96.6187 233.5509 95.7174 235.7806 93.8721 237.5439 ct92.0267 239.3073 89.4699 240.1685 86.0799 240.1685 ctcpdertmrtmstm0 0 0 1. f42.0833 2.0833 sp0 0 0 1. f4stm41.6667 fts/___FN3 cvsf0 0 0 1. f4F sa252.0833 81.0417 mt(1)  showT sartmrtmstm0.9375 0.6211 0.0078 0 f44.1667 4.1667 spnp45.8333 86.4583 mt108.3333 86.4583 li108.3333 317.7094 li197.9167 317.7094 li197.9167 201.2861 lidsrtmstm0 0 0 1. f40 0 0 1. f4stm0 0 0 1. f4np151.9816 226.3542 mt175.3174 226.3542 li175.3174 229.3449 li151.9816 229.3449 li151.9816 226.3542 licpdertmstm0 0 0 1. f4np179.244 218.7451 mt179.244 215.9375 li181.9095 215.6778 183.7253 215.2539 184.7778 214.6456 ct185.8304 214.0373 186.5981 212.6321 187.1175 210.363 ct190.0065 210.363 li190.0065 239.375 li186.1003 239.375 li186.1003 218.7451 li179.244 218.7451 licpdertmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm41.6667 fts/___FN3 cvsf0 0 0 1. f4F sa297.9167 237.2917 mt(1)  showT sartmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4F sa391.6667 237.2917 mt(3)  showT sartmrtmstm0.9375 0.6211 0.0078 0 f44.1667 4.1667 spnp197.9167 201.2861 mt197.9167 86.4583 li291.6667 86.4583 li291.6667 317.7094 li381.25 317.7094 li381.25 88.5417 li427.0833 88.5417 lidsrtmstm0 0 0 1. f40 0 0 1. f4stm0 0 0 1. f4np443.2739 134.8579 mt443.2739 136.1702 442.8567 137.2316 442.0024 138.0928 ct441.148 138.954 440.0899 139.3745 438.7777 139.3745 ct437.4654 139.3745 436.4073 138.954 435.553 138.0928 ct434.6986 137.2316 434.2814 136.1702 434.2814 134.8579 ct434.2814 133.5457 434.6986 132.4909 435.553 131.6434 ct436.4073 130.7959 437.4654 130.382 438.7777 130.382 ct440.0899 130.382 441.148 130.7959 442.0024 131.6434 ct442.8567 132.4909 443.2739 133.5457 443.2739 134.8579 ctcpdertmstm0 0 0 1. f4np457.8613 134.8579 mt457.8613 136.1702 457.4441 137.2316 456.5898 138.0928 ct455.7354 138.954 454.6773 139.3745 453.3651 139.3745 ct452.0528 139.3745 450.9947 138.954 450.1404 138.0928 ct449.286 137.2316 448.8688 136.1702 448.8688 134.8579 ct448.8688 133.5457 449.286 132.4909 450.1404 131.6434 ct450.9947 130.7959 452.0528 130.382 453.3651 130.382 ct454.6773 130.382 455.7354 130.7959 456.5898 131.6434 ct457.4441 132.4909 457.8613 133.5457 457.8613 134.8579 ctcpdertmstm0 0 0 1. f4np472.4487 134.8579 mt472.4487 136.1702 472.0315 137.2316 471.1772 138.0928 ct470.3228 138.954 469.2647 139.3745 467.9525 139.3745 ct466.6402 139.3745 465.5821 138.954 464.7278 138.0928 ct463.8734 137.2316 463.4562 136.1702 463.4562 134.8579 ct463.4562 133.5457 463.8734 132.4909 464.7278 131.6434 ct465.5821 130.7959 466.6402 130.382 467.9525 130.382 ct469.2647 130.382 470.3228 130.7959 471.1772 131.6434 ct472.0315 132.4909 472.4487 133.5457 472.4487 134.8579 ctcpdertmrtmstm0 0 0 1. f44.1667 4.1667 sp0 0 0 1. f4stm0 0 0 1. f4np243.6483 334.6875 mt266.984 334.6875 li266.984 337.6782 li243.6483 337.6782 li243.6483 334.6875 licpdertmstm0 0 0 1. f4np270.9106 327.0785 mt270.9106 324.2708 li273.5762 324.0111 275.392 323.5872 276.4445 322.9789 ct277.497 322.3706 278.2647 320.9654 278.7842 318.6963 ct281.6732 318.6963 li281.6732 347.7083 li277.7669 347.7083 li277.7669 327.0785 li270.9106 327.0785 licpdertmrtmstm0 0 0 1. f40.1250 0.1250 spnp108.3333 317.7083 mt95.8333 317.7083 li75. 317.7083 mt62.5 317.7083 li41.6667 317.7083 mt29.1667 317.7083 lidsrtmstm0.668 0.5781 0.6641 0.5039 f42.0833 2.0833 spnp339.5833 187.5 mt339.5833 214.5833 lidsrtmstm0.668 0.5781 0.6641 0.5039 f4np143.75 187.5 mt143.75 214.5833 lidsrtmstm0 0 0 1. f40 0 0 1. f4stm0 0 0 1. f4np12.0239 143.1913 mt12.0239 144.5035 11.6067 145.565 10.7524 146.4261 ct9.898 147.2873 8.8399 147.7079 7.5277 147.7079 ct6.2154 147.7079 5.1573 147.2873 4.303 146.4261 ct3.4486 145.565 3.0314 144.5035 3.0314 143.1913 ct3.0314 141.879 3.4486 140.8243 4.303 139.9768 ct5.1573 139.1293 6.2154 138.7154 7.5277 138.7154 ct8.8399 138.7154 9.898 139.1293 10.7524 139.9768 ct11.6067 140.8243 12.0239 141.879 12.0239 143.1913 ctcpdertmstm0 0 0 1. f4np26.6113 143.1913 mt26.6113 144.5035 26.1941 145.565 25.3398 146.4261 ct24.4854 147.2873 23.4273 147.7079 22.1151 147.7079 ct20.8028 147.7079 19.7447 147.2873 18.8904 146.4261 ct18.036 145.565 17.6188 144.5035 17.6188 143.1913 ct17.6188 141.879 18.036 140.8243 18.8904 139.9768 ct19.7447 139.1293 20.8028 138.7154 22.1151 138.7154 ct23.4273 138.7154 24.4854 139.1293 25.3398 139.9768 ct26.1941 140.8243 26.6113 141.879 26.6113 143.1913 ctcpdertmstm0 0 0 1. f4np41.1987 143.1913 mt41.1987 144.5035 40.7815 145.565 39.9272 146.4261 ct39.0728 147.2873 38.0147 147.7079 36.7025 147.7079 ct35.3902 147.7079 34.3321 147.2873 33.4778 146.4261 ct32.6234 145.565 32.2062 144.5035 32.2062 143.1913 ct32.2062 141.879 32.6234 140.8243 33.4778 139.9768 ct34.3321 139.1293 35.3902 138.7154 36.7025 138.7154 ct38.0147 138.7154 39.0728 139.1293 39.9272 139.9768 ct40.7815 140.8243 41.1987 141.879 41.1987 143.1913 ctcpdertmrtmheterminate